Optimise Hyperparameters using spearmint

1. Download numpy

2. Download whatever machine learning libraries you need: sklearn(bdt, svm, ...), keras(neural nets) rep (xgboost, Follow guide on https://github.com/yandex/rep)
Whatever libraries you don't download, you need to comment out the corresponding import statements in 'optimise_hyperparam.py' and 'setup_optimise_hyperparam.py'

3. Download Spearmint and set it up (Follow guide on https://github.com/HIPS/Spearmint)

4. Download this git repository. 

5. Update the location of your spearmint main file as "spearmint_directory" in optimise_hyperparam.py

6. Run optimise_hyperparam (python optimise_hyperparam.py)

7. The optimised parameters can be seen on the screen or in the text files like optimisation_gauss/nn/nn_4D_gauss_optimisation_values_best.txt. A full list of parameters is in the text files like optimisation_gauss/nn/nn_4D_gauss_optimisation_values.txt



Toubleshooting

1. When running optimise_hyperparam make sure that MongoDB has been set up properly. If it works it will display:
'child process started successfully, parent exiting'
If it displays:
'ERROR: child process failed, exited with error number'
then just cancel optimise_hyperparam and run it again



Optional

1. Supply your own data sets as tab separated text files and update their names in optimise_hyperparam. The first file contains data points of class 1. The second file contains data points of class 2. The machine learning algorithms try to learn the difference between these two classes.

2. Specify which classifiers to optimise, which parameters to optimise, and what the allowed ranges for each of these parameters are. For that follow the example of xgb in optimise_hyperparam.py

3. Write a customised Keras model by updating make_keras_model in setup_optimise_hyperparam.py

4. Write a customised score function (this is the criterion that determines when the machine learning algorithms have done well) by updating classifier_eval in setup_optimise_hyperparam.py


